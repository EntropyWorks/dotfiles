# This is to make my prompt happy
# its just a little to big but it work
#

# Get the name of the knife block used
function get_knife_block_used {
  knife_used=$(readlink ~/.chef/knife.rb | sed  -e 's/\.rb$//' -e 's/^.*knife-//')
  echo -n ${knife_used}
}

function _git_prompt() {
    local git_status="`git status -unormal 2>&1`"
    if ! [[ "$git_status" =~ Not\ a\ git\ repo ]]; then
        if [[ "$git_status" =~ nothing\ to\ commit ]]; then
            local ansi=42
        elif [[ "$git_status" =~ nothing\ added\ to\ commit\ but\ untracked\ files\ present ]]; then
            local ansi=43
        else
            local ansi=45
        fi
        if [[ "$git_status" =~ On\ branch\ ([^[:space:]]+) ]]; then
            branch=${BASH_REMATCH[1]}
            test "$branch" != master || branch='master'
        else
            # Detached HEAD.  (branch=HEAD is a faster alternative.)
            branch="(`git describe --all --contains --abbrev=4 HEAD 2> /dev/null ||
                echo HEAD`)"
        fi
        echo -n '\[\e[0;37;'"$ansi"';1m\]'"$branch"'\[\e[0m\] '
        #printf "%${COLUMNS}s\n" "'\[\e[0;37;'"$ansi"';1m\]'"$branch"'\[\e[0m\] '"
    fi
}

function parse_git_branch {
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
}

function git-track {
    CURRENT_BRANCH=$(parse_git_branch)
    git config branch.$CURRENT_BRANCH.remote $1
    git config branch.$CURRENT_BRANCH.merge refs/heads/$CURRENT_BRANCH
}

function parse_git_branch_and_add_brackets {
  #if [ -d .git ] ; then
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\ \[\1\]/'
  #fi
}

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
  # We have color support; assume it's compliant with Ecma-48
  # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
  # a case would tend to support setf rather than setaf.)
  color_prompt=yes
    else
  color_prompt=
    fi
fi


if [ "$PS1" ]; then
      case $TERM in
    xterm*)
      if [ -e /etc/sysconfig/bash-prompt-xterm ]; then
        PROMPT_COMMAND=/etc/sysconfig/bash-prompt-xterm
      else
        function _prompt_command() {
          #PS1="`_git_prompt`${debian_chroot:+($debian_chroot)}\u@\h:\w\[\033[0;32m\]\$(parse_git_branch_and_add_brackets)\[\033[0m\]\n\$ "
          #PS1="${debian_chroot:+($debian_chroot)}\u@\h:[$(get_knife_block_used)]:${CLOUD_PROMPT:-}:\n$(_git_prompt) \w\n\$ "
          PS5="${debian_chroot:+($debian_chroot)}${On_Cyan}$(get_knife_block_used)${Color_Off}:${CLOUD_PROMPT:-}:$(_git_prompt)"
          PS4='\n\u@\h:\w\n\$ '
          PS1="${PS5}${PS4}" ;
        }
        PROMPT_COMMAND='_prompt_command; echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/~}"; echo -ne "\007"'
      fi
      ;;
    screen*)
      if [ -e /etc/sysconfig/bash-prompt-screen ]; then
        PROMPT_COMMAND=/etc/sysconfig/bash-prompt-screen
      else
        # Added by Yazz. If this causes editor problems please let me know
        SCREEN_TITLE='\[\ek\u@\h: \w\e\\\]' ;
        shopt -s checkwinsize
        #[ "$PS1" = "\\s-\\v\\\$ " ] && PS1="\h:\W \u\[\033[0;32m\]\$(parse_git_branch_and_add_brackets)\[\033[0m\]\$ "
        function _prompt_command() {
          #PS5="`_git_prompt`${debian_chroot:+($debian_chroot)}\u@\h:${CLOUD_PROMPT:-}:\w\[\033[0;32m\]\$(parse_git_branch_and_add_brackets)\[\033[0m\]\n\$ "
          PS5="${debian_chroot:+($debian_chroot)}${On_Cyan}$(get_knife_block_used)${Color_Off}:${CLOUD_PROMPT:-}:$(_git_prompt)"
          PS4='\n\u@\h:\w\n\$ '
          PS1="${SCREEN_TITLE}${PS5}${PS4}" ;
        }
        PROMPT_COMMAND='_prompt_command; echo -ne "\033_${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/~}"; echo -ne "\033\\"' ;
        # End of Yazz add
      fi
      ;;
    *)
      [ -e /etc/sysconfig/bash-prompt-default ] && PROMPT_COMMAND=/etc/sysconfig/bash-prompt-default
      # Turn on checkwinsize
      shopt -s checkwinsize
      #[ "$PS1" = "\\s-\\v\\\$ " ] && PS1="\h:\W \u\[\033[0;32m\]\$(parse_git_branch_and_add_brackets)\[\033[0m\]\$ "
      #PS1="`_git_prompt`${debian_chroot:+($debian_chroot)}\u@\h:[$(get_knife_block_used)]:${CLOUD_PROMPT:-}:\w\[\033[0;32m\]\$(parse_git_branch_and_add_brackets)\[\033[0m\]\n\$ "
      PS5="${debian_chroot:+($debian_chroot)}${On_Cyan}$(get_knife_block_used)${Color_Off}:${CLOUD_PROMPT:-}:$(_git_prompt)"
      PS4='\n\u@\h:\w\n\$ '
      PS1="${PS5}${PS4}" ;
        ;;
    esac
fi

unset color_prompt force_color_prompt
