# Thi is borrowed from: 
# https://github.com/openstack/python-novaclient/blob/master/tools/nova.bash_completion
#
_nova_opts="" # lazy init
_nova_flags="" # lazy init
_nova_opts_exp="" # lazy init
_nova()
{
    local cur prev nbc cflags
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"

    if [ "x$_nova_opts" == "x" ] ; then
        nbc="`nova bash-completion | sed -e "s/  *-h  */ /" -e "s/  *-i  */ /"`"
        _nova_opts="`echo "$nbc" | sed -e "s/--[a-z0-9_-]*//g" -e "s/  */ /g"`"
        _nova_flags="`echo " $nbc" | sed -e "s/ [^-][^-][a-z0-9_-]*//g" -e "s/  */ /g"`"
        _nova_opts_exp="`echo "$_nova_opts" | tr ' ' '|'`"
    fi

    if [[ " ${COMP_WORDS[@]} " =~ " "($_nova_opts_exp)" " && "$prev" != "help" ]] ; then
        COMPLETION_CACHE=~/.novaclient/*/*-cache
        cflags="$_nova_flags "$(cat $COMPLETION_CACHE 2> /dev/null | tr '\n' ' ')
        COMPREPLY=($(compgen -W "${cflags}" -- ${cur}))
    else
        COMPREPLY=($(compgen -W "${_nova_opts}" -- ${cur}))
    fi
    return 0
}
complete -F _nova nova

_neutron_opts="" # lazy init
_neutron_flags="" # lazy init
_neutron_opts_exp="" # lazy init
_neutron()
{
    local cur prev nbc cflags
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"

    if [ "x$_neutron_opts" == "x" ] ; then
        nbc="`neutron bash-completion`"
        _neutron_opts="`echo "$nbc" | sed -e "s/--[a-z0-9_-]*//g" -e "s/\s\s*/ /g"`"
        _neutron_flags="`echo " $nbc" | sed -e "s/ [^-][^-][a-z0-9_-]*//g" -e "s/\s\s*/ /g"`"
        _neutron_opts_exp="`echo "$_neutron_opts" | sed -e "s/\s/|/g"`"
    fi

    if [[ " ${COMP_WORDS[@]} " =~ " "($_neutron_opts_exp)" " && "$prev" != "help" ]] ; then
        COMPLETION_CACHE=~/.neutronclient/*/*-cache
        cflags="$_neutron_flags "$(cat $COMPLETION_CACHE 2> /dev/null | tr '\n' ' ')
        COMPREPLY=($(compgen -W "${cflags}" -- ${cur}))
    else
        COMPREPLY=($(compgen -W "${_neutron_opts}" -- ${cur}))
    fi
    return 0
}
complete -F _neutron neutron

_ironic_opts="" # lazy init
_ironic_flags="" # lazy init
_ironic_opts_exp="" # lazy init
_ironic()
{
    local cur prev nbc cflags
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"

    if [ "x$_ironic_opts" == "x" ] ; then
        nbc="`ironic bash-completion | sed -e "s/  *-h  */ /" -e "s/  *-i  */ /"`"
        _ironic_opts="`echo "$nbc" | sed -e "s/--[a-z0-9_-]*//g" -e "s/  */ /g"`"
        _ironic_flags="`echo " $nbc" | sed -e "s/ [^-][^-][a-z0-9_-]*//g" -e "s/  */ /g"`"
        _ironic_opts_exp="`echo "$_ironic_opts" | tr ' ' '|'`"
    fi

    if [[ " ${COMP_WORDS[@]} " =~ " "($_ironic_opts_exp)" " && "$prev" != "help" ]] ; then
        COMPLETION_CACHE=$HOME/.cache/python-ironicclient/*/*-cache
        cflags="$_ironic_flags "$(cat $COMPLETION_CACHE 2> /dev/null | tr '\n' ' ')
        COMPREPLY=($(compgen -W "${cflags}" -- ${cur}))
    else
        COMPREPLY=($(compgen -W "${_ironic_opts}" -- ${cur}))
    fi
    return 0
}
complete -F _ironic ironic
